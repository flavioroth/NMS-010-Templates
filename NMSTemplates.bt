//------------------------------------------------
//--- 010 Editor v7.0.2 Binary Template
//
//      File:
//   Authors:
//   Version:
//   Purpose:
//  Category:
// File Mask:
//  ID Bytes:
//   History:
//------------------------------------------------
#include "TemplateDefinitions.bt";
struct List;
struct NMSTemplate;
#include "Enums.bt";
#include "MiscStruct.bt";
#include "TemplateIncludes.bt";

struct List {
    uint64 listStartOffset;
    uint listSize;
    local int i;
    for (i=0;i<listSize;i++) {
        FSeek( startof(listStartOffset) + listStartOffset + (i * 72));
        NMSTemplate child;
    }
    FSeek( startof(listSize) + 4);
};

struct NMSTemplate {
    uint64 offset;
    char TemplateName[64];
    if (offset > 0) {
        FSeek( startof(offset) + offset);
    } else {
        FSkip(4);
    }
    switch (TemplateName)
    {
        case "cGcHUDManagerData":
            GcHUDManagerData Data;
            break;
        case "cGcNGuiElementData":
            GcNGuiElementData Data;
            break;
        case "cGcNGuiGraphicData":
            GcNGuiGraphicData Data;
            break;
        case "cGcNGuiLayerData":
            GcNGuiLayerData Data;
            break;
        case "cGcNGuiLayoutData":
            GcNGuiLayoutData Data;
            break;
        case "cGcNGuiTextData":
            GcNGuiTextData Data;
            break;
        case "cTkCurveType":
            TkCurveType Data;
            break;
        case "cTkNGuiAlignment":
            TkNGuiAlignment Data;
            break;
        case "cTkNGuiGraphicStyle":
            TkNGuiGraphicStyle Data;
            break;
        case "cTkNGuiGraphicStyleData":
            TkNGuiGraphicStyleData Data;
            break;
        case "cTkNGuiTextStyle":
            TkNGuiTextStyle Data;
            break;
        case "cTkNGuiTextStyleData":
            TkNGuiTextStyleData Data;
            break;
    }
};

struct MBIN {
    struct HEADER {
        uint    Magic;
        uint     Unknown04;
        uint     Unknown08;
        uint     Unknown0C;
        uint64     Unknown10;
        char TemplateName[72];
        switch (TemplateName)
        {
            case "cGcHUDManagerData":
                GcHUDManagerData Data;
                break;
            case "cGcNGuiElementData":
                GcNGuiElementData Data;
                break;
            case "cGcNGuiGraphicData":
                GcNGuiGraphicData Data;
                break;
            case "cGcNGuiLayerData":
                GcNGuiLayerData Data;
                break;
            case "cGcNGuiLayoutData":
                GcNGuiLayoutData Data;
                break;
            case "cGcNGuiTextData":
                GcNGuiTextData Data;
                break;
            case "cTkCurveType":
                TkCurveType Data;
                break;
            case "cTkNGuiAlignment":
                TkNGuiAlignment Data;
                break;
            case "cTkNGuiGraphicStyle":
                TkNGuiGraphicStyle Data;
                break;
            case "cTkNGuiGraphicStyleData":
                TkNGuiGraphicStyleData Data;
                break;
            case "cTkNGuiTextStyle":
                TkNGuiTextStyle Data;
                break;
            case "cTkNGuiTextStyleData":
                TkNGuiTextStyleData Data;
                break;
        }
    } header;
} file;
